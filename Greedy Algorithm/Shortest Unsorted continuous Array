Given an integer array nums, you need to find one continuous subarray such that if you only sort this subarray in non-decreasing order, 
then the whole array will be sorted in non-decreasing order.Return the shortest such subarray and output its length.

Example 1:

Input: nums = [2,6,4,8,10,9,15]
Output: 5
Explanation: You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.

Example 2:

Input: nums = [1,2,3,4]
Output: 0

Example 3:

Input: nums = [1]
Output: 0

import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int N=sc.nextInt();
        int nums[]=new int[N];
        for(int i=0;i<N;i++){
            nums[i]=sc.nextInt();
        }
        int result=findUnsortedSubarray(nums);
        System.out.println(result);
    }
    public static int findUnsortedSubarray(int[] nums){
        int n=nums.length;
        int sorted[]=new int[n];
        for(int i=0;i<n;i++){
            sorted[i]=nums[i];
        }
        Arrays.sort(sorted);
        int i=0;
        while(i<n && nums[i]==sorted[i]){
            i++;
        }
        int j=n-1;
        while(j>=0 && nums[j]==sorted[j]){
            j--;
        }
        return (i>j)? 0 : j-i+1;
    }
}
