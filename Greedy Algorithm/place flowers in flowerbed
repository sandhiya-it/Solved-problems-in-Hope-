You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in adjacent plots.
Given an integer array flowerbed containing 0's and 1's, where 0 means empty and 1 means not empty, and an integer n,
return true if n new flowers can be planted in the flowerbed without violating the no-adjacent-flowers rule and false otherwise.

Example 1:

Input: flowerbed = [1,0,0,0,1], n = 1
Output: true

Example 2:

Input: flowerbed = [1,0,0,0,1], n = 2
Output: false

import java.util.*;

public class Main {
    public static boolean canPlaceFlowers(int[] flowerbed, int n) {
        int count = 0;
        for (int i = 0; i < flowerbed.length; i++) {
            if (flowerbed[i] == 0 &&
               (i == 0 || flowerbed[i - 1] == 0) &&
               (i == flowerbed.length - 1 || flowerbed[i + 1] == 0)) {
                
                flowerbed[i] = 1; // plant flower
                count++;
                if (count >= n) return true; // early exit
            }
        }
        return count >= n;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Input length of flowerbed
        System.out.print("Enter length of flowerbed: ");
        int len = sc.nextInt();

        int[] flowerbed = new int[len];
        System.out.println("Enter flowerbed elements (0 or 1):");
        for (int i = 0; i < len; i++) {
            flowerbed[i] = sc.nextInt();
        }

        // Input n
        System.out.print("Enter number of flowers to plant: ");
        int n = sc.nextInt();

        // Check result
        boolean result = canPlaceFlowers(flowerbed, n);
        System.out.println("Can place flowers? " + result);
    }
}
